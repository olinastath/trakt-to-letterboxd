<h3>Ready to make the switch?</h3>
<p>This web application will help you export your movie data from your <b>Trakt.tv</b> account so it can be imported into your <b>Letterboxd</b> account.</p>
<p>Youâ€™ll be able to preview the results before confirming the import on Letterboxd.</p>

<ol>
  <li><a id="download">Download your movie data from Trakt as a CSV file</a></li>
  <li><a href="https://letterboxd.com/import/" target="_blank">Import your CSV file into Letterboxd</a></li>
</ol>

<div id="popup">
  <form action="/download" method="GET" class="flex-column">
    <div class="form-field flex-column">
      <label for="username">Trakt username:</label>
      <input type="text" placeholder="Enter Trakt username" name="username" required>
    </div>

    <div class="form-field">
      <label id="date-selector">Select a date range (optional)</label>
      
      <div id="date-container" class="flex-column">
        <span class="wrapper" id="startDate-wrapper">
          <label for="startDate">Start date:</label>
          <label class="small" >Clear</label>
        </span>
        <input type="date" id="startDate" name="startDate">

        <span class="wrapper" id="endDate-wrapper">
          <label for="endDate">End date:</label>
          <label class="small" >Clear</label>
        </span>
        <input type="date" id="endDate" name="endDate">
      </div>
    </div>

    <button type="submit" class="btn" id="download-btn">Download data</button>
  </form>
  <i class="fa fa-times" id="close-btn"></i>
</div>

<p class="small">* If you have already logged some movies, there may be duplicate entries.</p>
<p class="small">Follow me on <a href="https://letterboxd.com/Olina/" target="_blank">Letterboxd</a> and <a href="https://trakt.tv/users/stiefels" target="_blank">Trakt</a> while you're here.</p>

<script>
  function errorAlert(statusCode) {
    let alertTitle = `${statusCode}: `
    let alertText;
    let contactText = 'Please try again later or contact us to resolve it.';
    switch(statusCode) {
        case '400': 
            alertTitle += 'Bad Request';
            alertText = 'Request could not be parsed. ' + contactText; 
            break;
        case '401': 
            alertTitle += 'Unauthorized.'
            break;
        case '403': 
            alertTitle += 'Forbidden.';
            break;
        case '404':
            alertTitle += 'Not Found.';
            alertText = 'Please check username and try again.';
            break;
        case '405':
            alertTitle += 'Method Not Allowed';
            alertText = 'How did you get here? ðŸ¤”'
        case '500':
            alertTitle += 'Server error.';
            break;
        case '503': case '504': case '520': case '521': case '522':
            alertTitle += 'Service unavailble.';
            break;
        default:
            break;
    }

    if (!alertText) alertText = contactText;
    
    if (statusCode) swal(alertTitle, alertText, {closeOnClickOutside: true, closeOnEsc: true});
  }

  errorAlert('{{error}}');
</script>